When would you want to use a remote repository rather than keeping all your work
local?

  	 With a remote repository you can share your local repository with other 
     people and collaborate. Other people can contribute to your project.
     Since remote repositories are cloud based, they're accessible by anyone 
     with Internet access. Also they provide a form of backup. 
      
Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

  	 Because in that way you have more control over your code. If a new version
  	 of the code is availbale on GitHub but happens to be buggy, you might not 
  	 want to pull any changes until the bug is fixed.  

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

	 Forks, Clones and Branches are all ways to add changes without affecting 
	 the existing version.Forking is similar to Cloning. The main difference is 
     that when you fork a repository you clone it on GitHub service instead on 
     your own machine. You may want to use a fork when you want to collaborate 
     with a friend and make changes to an existing repository that you haven't 
     got push access. By cloning a repository you make an exact copy of it on 
     your local machine in order to make your own changes and work locally.

What is the benefit of having a copy of the last known state of the remote
stored locally?

     If I am about to go offline I can update the local copy of the remote 
	 (origin/master). I can do this even if I am not ready to merge the remote 
     changes into my own master branch. I can work on my own master branch and 
     when I get ready I can perform the merge offline.
	 
How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
